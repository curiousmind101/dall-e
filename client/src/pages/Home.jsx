import React, {useState, useEffect} from 'react'
import { Loader, Card, FormField } from '../components'
import videoBg from '../assets/googledeepmind.mp4';

const RenderCards = ({ data, title }) => {
   if (data?.length > 0) {
     return (
       data.map((post) => <Card key={post._id} {...post} />)
     );
   }
 
   return (
     <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
   );
 };

const Home = () => {
    const [loading, setLoading] = useState(false);
    const [allPosts, setAllPosts] = useState(null);

    const [searchText, setSearchText] = useState('');
    const [searchTimeout, setSearchTimeout] = useState(null);
    const [searchedResults, setSearchedResults] = useState(null);

    const fetchPosts = async()=>{
      setLoading(true);
      
      try{
         const response = await fetch('https://dall-e-m8bd.onrender.com/api/v1/post', {
            method: 'GET',
            headers: {
               'Content-Type': 'application.json',
            },
         })

         if(response.ok){
            const result = await response.json();

            setAllPosts(result.data.reverse());
         }
      } catch(error){
         alert(error);
      } finally {
         setLoading(false);
      }
   }
   useEffect(()=>{
      fetchPosts();
   }, []);

    const handleSearchChange = (e) => {
      clearTimeout(searchTimeout);
      setSearchText(e.target.value);
  
      setSearchTimeout(
        setTimeout(() => {
          const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
          setSearchedResults(searchResult);
        }, 500),
      );
    };
    
  return (
    <section className='max-w-8xl max-auto'>
       <div>
         {/* <div className='relative top-0 left-0 ml-0 text-white text-center w-full h-full flex-col z-10 flex-wrap'>
            <h1 className='absolute text-center text-lg font-extrabold object-contain'>
            &quot;Creativity is seeing what others see and thinking what no one else ever thought.&quot; - Albert Einstein
            </h1>
         </div>
         <div className="bg-[#111414] opacity-80 relative top-0 left-0 h-full w-full"></div> */}
         <video src={videoBg} autoPlay loop muted className="w-full h-[30vh] relative left-0 top-0 object-cover rounded-xl contrast-50"/>
       </div>
       <div className='text-center'>
         <h1 className='mt-10 pt-10 text-[#222328] text-[32px] font-extrabold'>By Our Community</h1>
         <p className='mt-2 text-[#0a0f14] text-[16px]'>
               Have a look on our collection of imaginative and visssually stunning images generated by DALL-E AI
         </p>
       </div>
       <div className='mt-10 '>
         <FormField
            labelName="Search posts"
            type="text"
            name="text"
            placeholder="Search something..."
            value={searchText}
            handleChange={handleSearchChange}
          />
       </div>
       <div className='mt-10'>
          {loading?(
            <div className='flex justify-center items-center'>
                <Loader/>
            </div>
          ): (<>
            {searchText && (<h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for <span className='text-[#222329]'>{searchText}</span>
            </h2>)}
          </>)}
          <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
             {searchText? (
                <RenderCards 
                data={searchedResults}
                title="No search results found"
                />
             ): (
                <RenderCards
                    data={allPosts}
                    title="No posts found"
                />
             )}
          </div>
       </div>
    </section>
  )
}

export default Home